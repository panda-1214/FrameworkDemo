<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="10 seconds" debug="false">
    <!-- 日志路径 部署在服务器 文件夹需要设计777权限 -->
    <property name="log.base" value="d:/学习/logs/log"/>
    <!--日志存储天数-->
    <property name="log.max.days" value="30"/>
    <!-- 日志文件大小 -->
    <property name="log.max.size" value="500MB"/>
    <!-- 输出格式-->
    <property name="log.pattern" value="%date{ISO8601} %level [%thread] %logger{56} : %msg%n"/>
    <!--字符集-->
    <property name="log.charset" value="UTF-8"/>

    <!--控制台-附加器 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <!--格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${log.pattern}</pattern>
            <charset>${log.charset}}</charset>
        </encoder>
    </appender>

    <!--info-附加器-->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.base}/log.log</file><!--存储路径-->
        <!-- 输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${log.pattern}</pattern>
            <charset>${log.charset}</charset>
        </encoder>
        <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件。-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--按天回滚-->
            <fileNamePattern>${log.base}/archive/info_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志最大存储天数-->
            <maxHistory>${log.max.days}</maxHistory>
            <!--当天的日志 超过大小 压缩日志并保存 -->
            <maxFileSize>${log.max.size}</maxFileSize>
        </rollingPolicy>
        <!--过滤器，只记录INFO级别的日志-->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
            <!--<level>INFO</level>-->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!--<onMismatch>DENY</onMismatch>-->
        <!--</filter>-->
    </appender>

    <!-- 为某个包下的所有类的指定Appender 这里也可以指定类名称例如：com.aa.bb.ClassName -->
    <!--<logger name="org.springframework.aop.framework.CglibAopProxy" additivity="false">-->
        <!--<level value="info" />-->
        <!--<appender-ref ref="stdout" />-->
    <!--</logger>-->

    <!-- root将级别为“DEBUG”及大于“DEBUG”的日志信息交给已经配置好的名为“Console”的appender处理，“Console”appender将信息打印到Console -->
    <root level="info">
        <appender-ref ref="stdout" /> <!-- 标识这个appender将会添加到这个logger -->
        <appender-ref ref="file" />
    </root>




</configuration>